
package guiutmedic;

import guiutmedic.clases.Usuario;
import guiutmedic.utilerias.fondoPantallaMenu;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


/**
 *
 * @author santi
 */

public class frmMenuPrincipal extends javax.swing.JFrame {
  
    
    /**
     * Creates new form frmMenuPrincipal
     */
    
   
    /**
     *
     * @param objUsuario
     */

    private Usuario objetoMenuP; //variable del objeto local

    public frmMenuPrincipal(Usuario objUsuario) {
        
    fondoPantallaMenu fondo = new fondoPantallaMenu();

    this.objetoMenuP = objUsuario; 
    System.out.println("Usuario recibido: " + objUsuario.getIdUsuario());

    initComponents(); //inicializacion de componesntes del GUI
    setExtendedState(JFrame.MAXIMIZED_BOTH);

    Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();
    setSize(1160, 700);
    
    // Se establece el título con el usuario y el rol, con espacios y separadores claros
    this.setTitle("UTMEDIC  |  Usuario: " + objUsuario.getUsuario() + "  |  ROL: " + objUsuario.getRol());
    
    //Se comienzan a mostrar/ocultar opciones del menu en base al rol del usuario logeado
            if (objUsuario.getRol().equals("ADMIN")){ //rol administrador del sistema
               jMenuAgendar.setVisible(false); 
               jMenuReagendar.setVisible(false);  
               jMenuHistorial.setVisible(false); 
    
            }else if (objUsuario.getRol().equals("paciente")){ //pacientes de el personal de salud
//                opcUsuarios.setEnabled(false);
//                opcLevantar.setEnabled(false);
    
            }else if (objUsuario.getRol().equals("medico")) { //medicos, psicologos, nutriologos

                    }

    if (desktopPane != null) {
        desktopPane.setBorder(fondo);
    }

    try {
        ImageIcon iconoApp = new ImageIcon(getClass().getResource("/guiutmedic/imagenes/iconoLogin.jpeg"));
        setIconImage(iconoApp.getImage());
    } catch (NullPointerException e) {
        System.err.println("No se pudo cargar el icono de la aplicación: " + e.getMessage());
    }
}



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        JmenuBar = new javax.swing.JMenuBar();
        jMenuPerfil = new javax.swing.JMenu();
        jMenuAgendar = new javax.swing.JMenu();
        jMenuReagendar = new javax.swing.JMenu();
        jMenuHistorial = new javax.swing.JMenu();
        jMenuSalir = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout desktopPaneLayout = new javax.swing.GroupLayout(desktopPane);
        desktopPane.setLayout(desktopPaneLayout);
        desktopPaneLayout.setHorizontalGroup(
            desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );
        desktopPaneLayout.setVerticalGroup(
            desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 388, Short.MAX_VALUE)
        );

        jMenuPerfil.setText("Perfil");
        jMenuPerfil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuPerfilMouseClicked(evt);
            }
        });
        JmenuBar.add(jMenuPerfil);

        jMenuAgendar.setText("Agendar");
        jMenuAgendar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuAgendarMouseClicked(evt);
            }
        });
        JmenuBar.add(jMenuAgendar);

        jMenuReagendar.setText("Reagendar");
        jMenuReagendar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuReagendarMouseClicked(evt);
            }
        });
        JmenuBar.add(jMenuReagendar);

        jMenuHistorial.setText("Historial");
        jMenuHistorial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuHistorialMouseClicked(evt);
            }
        });
        JmenuBar.add(jMenuHistorial);

        jMenuSalir.setText("Salir");
        jMenuSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuSalirMouseClicked(evt);
            }
        });
        JmenuBar.add(jMenuSalir);

        setJMenuBar(JmenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuPerfilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuPerfilMouseClicked
        try {
            frmPerfil ventanaPerfil = new frmPerfil(objetoMenuP);
            this.desktopPane.add(ventanaPerfil);
            ventanaPerfil.setVisible(true);
            System.out.println("ID Usuario actual: "+this.objetoMenuP.getIdUsuario());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmMenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuPerfilMouseClicked

    private void jMenuAgendarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuAgendarMouseClicked
        try{
        frmAgendar ventanaAgendar = new frmAgendar(objetoMenuP);   
        this.desktopPane.add(ventanaAgendar);
        ventanaAgendar.setVisible(true); 
        
        }catch (ClassNotFoundException ex) {
            Logger.getLogger(frmMenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuAgendarMouseClicked

    private void jMenuReagendarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuReagendarMouseClicked
         
        int idCita = 123; 
    int idPerfil = 456;
        frmReagendar ventanaGUI = new frmReagendar(idCita, idPerfil);
    this.desktopPane.add(ventanaGUI);
    ventanaGUI.setVisible(true);
        
    }//GEN-LAST:event_jMenuReagendarMouseClicked

    private void jMenuHistorialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuHistorialMouseClicked
        frmHistorialCitas ventanaGUI = new frmHistorialCitas();   
        this.desktopPane.add(ventanaGUI);
        ventanaGUI.setVisible(true);
    }//GEN-LAST:event_jMenuHistorialMouseClicked

    private void jMenuSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuSalirMouseClicked
        int opcion = JOptionPane.showConfirmDialog(this,
            "¿Estas seguro de salir?",
            "Confirmar salida de UTMEDIC",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE);

        if (opcion == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuSalirMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMenuPrincipal(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar JmenuBar;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenu jMenuAgendar;
    private javax.swing.JMenu jMenuHistorial;
    private javax.swing.JMenu jMenuPerfil;
    private javax.swing.JMenu jMenuReagendar;
    private javax.swing.JMenu jMenuSalir;
    // End of variables declaration//GEN-END:variables
}
