
package guiutmedic.formularios;

import guiutmedic.clases.Cita;
import guiutmedic.clases.Perfil;
import guiutmedic.clases.ConexionBD;
import guiutmedic.clases.Usuario;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;// Librería para manejar listas dinámicas de objetos
import java.util.logging.Level; // Niveles de log (INFO, WARNING, SEVERE, etc.)
import java.util.logging.Logger; // Registro de mensajes y excepciones
import javax.swing.JButton;
import javax.swing.JOptionPane; // Mostrar mensajes, confirmaciones, advertencias, etc.
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel; // Modelo de datos para mostrar en una tabla (JTable)


/**
 *
 * @author santi
 */
public class frmAtender extends javax.swing.JInternalFrame {
private ArrayList<Cita> arregloCitas = new ArrayList<>();

    /**
     * Creates new form frmAtender
     */
    
    ConexionBD objetoConexionBD = new ConexionBD();
    Connection conn;
    PreparedStatement stmt = null;
    ResultSet rs = null;
    
private String obtenerNombrePorIdPerfil(int idPerfil) {
    String nombreCompleto = "";
    try {
        Connection con = objetoConexionBD.conexionDataBase();
        String sql = "SELECT nombre, apellido_paterno, apellido_materno FROM perfil WHERE idPerfil = ?";
        PreparedStatement ps = con.prepareStatement(sql);
        ps.setInt(1, idPerfil);
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            nombreCompleto = rs.getString("nombre") + " " +
                             rs.getString("apellido_paterno") + " " +
                             rs.getString("apellido_materno");
        }

        rs.close();
        ps.close();
        con.close();
    } catch (SQLException | ClassNotFoundException e) {
        JOptionPane.showMessageDialog(this, "Error al obtener nombre del paciente: " + e.getMessage());
    }

    return nombreCompleto;
}

        public static class CitaSeleccionada {
        public static int idCita;
        public static String nombrePaciente;
        public static String matricula;
        public static String motivo;
        public static String estado;
    }
        private Usuario objetoMenuP; //variable del objeto local
    public frmAtender(Usuario objUsuario) throws ClassNotFoundException{
    initComponents();
    this.objetoMenuP = objUsuario;
        SwingUtilities.invokeLater(new Runnable() {
        @Override
        public void run() {
            try {
                llenarTableCitas(objetoMenuP.getIdUsuario());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(frmAtender.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    });
        
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ConsultaMedica = new javax.swing.JDialog();
        jtabbedAtender = new javax.swing.JTabbedPane();
        pnlPsicologo = new javax.swing.JPanel();
        pnlBackPsi = new javax.swing.JPanel();
        pnlDatosPacientePsi = new javax.swing.JPanel();
        lblDatos2 = new javax.swing.JLabel();
        lblNombre3 = new javax.swing.JLabel();
        lblMatricula3 = new javax.swing.JLabel();
        txtMatriculaPsi = new javax.swing.JTextField();
        txtNombrePsi = new javax.swing.JTextField();
        lblAlergias3 = new javax.swing.JLabel();
        txtAlergiasPsi = new javax.swing.JTextField();
        lblPadecimientos3 = new javax.swing.JLabel();
        txtPadecimientosPsi = new javax.swing.JTextField();
        txtMotivoPsi = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        pnlDiagPsi = new javax.swing.JPanel();
        lblObservaciones2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaPsi = new javax.swing.JTextArea();
        pnlEstPsi = new javax.swing.JPanel();
        btnAtendidaPsi = new javax.swing.JButton();
        btnEncursoPsi = new javax.swing.JButton();
        btnCanceladaPsi = new javax.swing.JButton();
        pnlNutriologo = new javax.swing.JPanel();
        pnlBackNut = new javax.swing.JPanel();
        pnlDatosPacienteNut = new javax.swing.JPanel();
        lblDatos4 = new javax.swing.JLabel();
        lblNombre5 = new javax.swing.JLabel();
        lblMatricula5 = new javax.swing.JLabel();
        txtMatriculaNut = new javax.swing.JTextField();
        txtNombreNut = new javax.swing.JTextField();
        lblAlergias5 = new javax.swing.JLabel();
        txtAlergiasNut = new javax.swing.JTextField();
        lblPadecimientos5 = new javax.swing.JLabel();
        txtPadecimientosNut = new javax.swing.JTextField();
        txtMotivoNut = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        pnlDiagNut = new javax.swing.JPanel();
        lblObservaciones4 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextAreaNut = new javax.swing.JTextArea();
        pnlEstNut = new javax.swing.JPanel();
        btnAtendidaNut = new javax.swing.JButton();
        btnEncursoNut = new javax.swing.JButton();
        btnCanceladaNut = new javax.swing.JButton();
        pnlMedico = new javax.swing.JPanel();
        pnlBackPsi2 = new javax.swing.JPanel();
        pnlDatosPacienteMed = new javax.swing.JPanel();
        lblDatos6 = new javax.swing.JLabel();
        lblNombre7 = new javax.swing.JLabel();
        lblMatricula7 = new javax.swing.JLabel();
        txtMatriculaMed = new javax.swing.JTextField();
        txtNombreMed = new javax.swing.JTextField();
        lblAlergias7 = new javax.swing.JLabel();
        txtAlergiasMed = new javax.swing.JTextField();
        lblPadecimientos7 = new javax.swing.JLabel();
        txtPadecimientosMed = new javax.swing.JTextField();
        txtMotivoMed = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        pnlDiagMed = new javax.swing.JPanel();
        lblObservaciones6 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextAreaMed = new javax.swing.JTextArea();
        pnlEstPsi3 = new javax.swing.JPanel();
        btnAtendidaMed = new javax.swing.JButton();
        btnEncursoMed = new javax.swing.JButton();
        btnCanceladaMed = new javax.swing.JButton();
        pnlBackround = new javax.swing.JPanel();
        pnlCitas = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCitas = new javax.swing.JTable();
        pnlDetalles = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblMatricula = new javax.swing.JLabel();
        txtMatricula = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtHora = new javax.swing.JTextField();
        pnlOpciones = new javax.swing.JPanel();
        btnAtendidaNC = new javax.swing.JButton();
        btnDescartada = new javax.swing.JButton();
        btnAtender = new javax.swing.JButton();
        lblAlergias = new javax.swing.JLabel();
        txtAlergias = new javax.swing.JTextField();
        lblPadecimientos = new javax.swing.JLabel();
        txtPadecimientos = new javax.swing.JTextField();
        txtMotivo = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();

        lblDatos2.setText("Datos Paciente:");

        lblNombre3.setText("Nombre:");

        lblMatricula3.setText("Matricula:");

        txtMatriculaPsi.setEditable(false);
        txtMatriculaPsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMatriculaPsiActionPerformed(evt);
            }
        });

        txtNombrePsi.setEditable(false);
        txtNombrePsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombrePsiActionPerformed(evt);
            }
        });

        lblAlergias3.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lblAlergias3.setText("Alergias:");

        txtAlergiasPsi.setEditable(false);
        txtAlergiasPsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAlergiasPsiActionPerformed(evt);
            }
        });

        lblPadecimientos3.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lblPadecimientos3.setText("Padecimientos:");

        txtPadecimientosPsi.setEditable(false);
        txtPadecimientosPsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPadecimientosPsiActionPerformed(evt);
            }
        });

        txtMotivoPsi.setEditable(false);
        txtMotivoPsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMotivoPsiActionPerformed(evt);
            }
        });

        jLabel10.setText("Motivo Consulta:");

        javax.swing.GroupLayout pnlDatosPacientePsiLayout = new javax.swing.GroupLayout(pnlDatosPacientePsi);
        pnlDatosPacientePsi.setLayout(pnlDatosPacientePsiLayout);
        pnlDatosPacientePsiLayout.setHorizontalGroup(
            pnlDatosPacientePsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosPacientePsiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosPacientePsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlDatosPacientePsiLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(txtMotivoPsi))
                    .addGroup(pnlDatosPacientePsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlDatosPacientePsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlDatosPacientePsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pnlDatosPacientePsiLayout.createSequentialGroup()
                                    .addComponent(lblAlergias3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtAlergiasPsi, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlDatosPacientePsiLayout.createSequentialGroup()
                                    .addComponent(lblMatricula3)
                                    .addGap(14, 14, 14)
                                    .addComponent(txtMatriculaPsi))
                                .addGroup(pnlDatosPacientePsiLayout.createSequentialGroup()
                                    .addComponent(lblNombre3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(14, 14, 14)
                                    .addComponent(txtNombrePsi, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlDatosPacientePsiLayout.createSequentialGroup()
                                .addComponent(lblPadecimientos3)
                                .addGap(18, 18, 18)
                                .addComponent(txtPadecimientosPsi, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(lblDatos2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDatosPacientePsiLayout.setVerticalGroup(
            pnlDatosPacientePsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosPacientePsiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDatos2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosPacientePsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombrePsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosPacientePsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMatricula3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMatriculaPsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosPacientePsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAlergias3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAlergiasPsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosPacientePsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPadecimientos3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPadecimientosPsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosPacientePsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtMotivoPsi))
                .addContainerGap())
        );

        lblObservaciones2.setText("Diagnostico/Consulta:");

        jTextAreaPsi.setColumns(20);
        jTextAreaPsi.setRows(5);
        jTextAreaPsi.setToolTipText("Diagnostica el tratamiento/consulta para este paciente...");
        jScrollPane4.setViewportView(jTextAreaPsi);

        javax.swing.GroupLayout pnlDiagPsiLayout = new javax.swing.GroupLayout(pnlDiagPsi);
        pnlDiagPsi.setLayout(pnlDiagPsiLayout);
        pnlDiagPsiLayout.setHorizontalGroup(
            pnlDiagPsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDiagPsiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDiagPsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(pnlDiagPsiLayout.createSequentialGroup()
                        .addComponent(lblObservaciones2)
                        .addGap(0, 182, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlDiagPsiLayout.setVerticalGroup(
            pnlDiagPsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDiagPsiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblObservaciones2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlEstPsi.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones de la cita actual:"));

        btnAtendidaPsi.setBackground(new java.awt.Color(0, 255, 153));
        btnAtendidaPsi.setText("Atendida");
        btnAtendidaPsi.setToolTipText("\"Marca esta cita como atendida y finaliza el seguimiento\"");
        btnAtendidaPsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtendidaPsiActionPerformed(evt);
            }
        });

        btnEncursoPsi.setBackground(new java.awt.Color(51, 102, 255));
        btnEncursoPsi.setText("En curso");
        btnEncursoPsi.setToolTipText("\"Guarda observaciones y mantiene la cita como en proceso\"");
        btnEncursoPsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncursoPsiActionPerformed(evt);
            }
        });

        btnCanceladaPsi.setBackground(new java.awt.Color(255, 51, 51));
        btnCanceladaPsi.setText("Cancelada");
        btnCanceladaPsi.setToolTipText("\"Cancela o descarta la cita, dejando registro de que no fue atendida\"");
        btnCanceladaPsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCanceladaPsiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlEstPsiLayout = new javax.swing.GroupLayout(pnlEstPsi);
        pnlEstPsi.setLayout(pnlEstPsiLayout);
        pnlEstPsiLayout.setHorizontalGroup(
            pnlEstPsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEstPsiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAtendidaPsi, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEncursoPsi, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCanceladaPsi)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlEstPsiLayout.setVerticalGroup(
            pnlEstPsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEstPsiLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlEstPsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAtendidaPsi)
                    .addComponent(btnEncursoPsi)
                    .addComponent(btnCanceladaPsi))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout pnlBackPsiLayout = new javax.swing.GroupLayout(pnlBackPsi);
        pnlBackPsi.setLayout(pnlBackPsiLayout);
        pnlBackPsiLayout.setHorizontalGroup(
            pnlBackPsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackPsiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDatosPacientePsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlBackPsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlEstPsi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDiagPsi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        pnlBackPsiLayout.setVerticalGroup(
            pnlBackPsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackPsiLayout.createSequentialGroup()
                .addGroup(pnlBackPsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDatosPacientePsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlBackPsiLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlDiagPsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnlEstPsi, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlPsicologoLayout = new javax.swing.GroupLayout(pnlPsicologo);
        pnlPsicologo.setLayout(pnlPsicologoLayout);
        pnlPsicologoLayout.setHorizontalGroup(
            pnlPsicologoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 749, Short.MAX_VALUE)
            .addGroup(pnlPsicologoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPsicologoLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBackPsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(18, Short.MAX_VALUE)))
        );
        pnlPsicologoLayout.setVerticalGroup(
            pnlPsicologoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 233, Short.MAX_VALUE)
            .addGroup(pnlPsicologoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPsicologoLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBackPsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jtabbedAtender.addTab("Psicologo", pnlPsicologo);

        lblDatos4.setText("Datos Paciente:");

        lblNombre5.setText("Nombre:");

        lblMatricula5.setText("Matricula:");

        txtMatriculaNut.setEditable(false);
        txtMatriculaNut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMatriculaNutActionPerformed(evt);
            }
        });

        txtNombreNut.setEditable(false);
        txtNombreNut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreNutActionPerformed(evt);
            }
        });

        lblAlergias5.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lblAlergias5.setText("Alergias:");

        txtAlergiasNut.setEditable(false);
        txtAlergiasNut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAlergiasNutActionPerformed(evt);
            }
        });

        lblPadecimientos5.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lblPadecimientos5.setText("Padecimientos:");

        txtPadecimientosNut.setEditable(false);
        txtPadecimientosNut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPadecimientosNutActionPerformed(evt);
            }
        });

        txtMotivoNut.setEditable(false);
        txtMotivoNut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMotivoNutActionPerformed(evt);
            }
        });

        jLabel12.setText("Motivo Consulta:");

        javax.swing.GroupLayout pnlDatosPacienteNutLayout = new javax.swing.GroupLayout(pnlDatosPacienteNut);
        pnlDatosPacienteNut.setLayout(pnlDatosPacienteNutLayout);
        pnlDatosPacienteNutLayout.setHorizontalGroup(
            pnlDatosPacienteNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosPacienteNutLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosPacienteNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlDatosPacienteNutLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(txtMotivoNut))
                    .addGroup(pnlDatosPacienteNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlDatosPacienteNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlDatosPacienteNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pnlDatosPacienteNutLayout.createSequentialGroup()
                                    .addComponent(lblAlergias5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtAlergiasNut, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlDatosPacienteNutLayout.createSequentialGroup()
                                    .addComponent(lblMatricula5)
                                    .addGap(14, 14, 14)
                                    .addComponent(txtMatriculaNut))
                                .addGroup(pnlDatosPacienteNutLayout.createSequentialGroup()
                                    .addComponent(lblNombre5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(14, 14, 14)
                                    .addComponent(txtNombreNut, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlDatosPacienteNutLayout.createSequentialGroup()
                                .addComponent(lblPadecimientos5)
                                .addGap(18, 18, 18)
                                .addComponent(txtPadecimientosNut, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(lblDatos4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDatosPacienteNutLayout.setVerticalGroup(
            pnlDatosPacienteNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosPacienteNutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDatos4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosPacienteNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreNut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosPacienteNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMatricula5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMatriculaNut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosPacienteNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAlergias5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAlergiasNut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosPacienteNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPadecimientos5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPadecimientosNut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosPacienteNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtMotivoNut))
                .addContainerGap())
        );

        lblObservaciones4.setText("Diagnostico/Consulta:");

        jTextAreaNut.setColumns(20);
        jTextAreaNut.setRows(5);
        jTextAreaNut.setToolTipText("Diagnostica el tratamiento/consulta para este paciente...");
        jScrollPane6.setViewportView(jTextAreaNut);

        javax.swing.GroupLayout pnlDiagNutLayout = new javax.swing.GroupLayout(pnlDiagNut);
        pnlDiagNut.setLayout(pnlDiagNutLayout);
        pnlDiagNutLayout.setHorizontalGroup(
            pnlDiagNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDiagNutLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDiagNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addGroup(pnlDiagNutLayout.createSequentialGroup()
                        .addComponent(lblObservaciones4)
                        .addGap(0, 182, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlDiagNutLayout.setVerticalGroup(
            pnlDiagNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDiagNutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblObservaciones4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlEstNut.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones de la cita actual:"));

        btnAtendidaNut.setBackground(new java.awt.Color(0, 255, 153));
        btnAtendidaNut.setText("Atendida");
        btnAtendidaNut.setToolTipText("\"Marca esta cita como atendida y finaliza el seguimiento\"");
        btnAtendidaNut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtendidaNutActionPerformed(evt);
            }
        });

        btnEncursoNut.setBackground(new java.awt.Color(51, 102, 255));
        btnEncursoNut.setText("En curso");
        btnEncursoNut.setToolTipText("\"Guarda observaciones y mantiene la cita como en proceso\"");
        btnEncursoNut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncursoNutActionPerformed(evt);
            }
        });

        btnCanceladaNut.setBackground(new java.awt.Color(255, 51, 51));
        btnCanceladaNut.setText("Cancelada");
        btnCanceladaNut.setToolTipText("\"Cancela o descarta la cita, dejando registro de que no fue atendida\"");
        btnCanceladaNut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCanceladaNutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlEstNutLayout = new javax.swing.GroupLayout(pnlEstNut);
        pnlEstNut.setLayout(pnlEstNutLayout);
        pnlEstNutLayout.setHorizontalGroup(
            pnlEstNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEstNutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAtendidaNut, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEncursoNut, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCanceladaNut)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlEstNutLayout.setVerticalGroup(
            pnlEstNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEstNutLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlEstNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAtendidaNut)
                    .addComponent(btnEncursoNut)
                    .addComponent(btnCanceladaNut))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout pnlBackNutLayout = new javax.swing.GroupLayout(pnlBackNut);
        pnlBackNut.setLayout(pnlBackNutLayout);
        pnlBackNutLayout.setHorizontalGroup(
            pnlBackNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackNutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDatosPacienteNut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlBackNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlEstNut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDiagNut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        pnlBackNutLayout.setVerticalGroup(
            pnlBackNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackNutLayout.createSequentialGroup()
                .addGroup(pnlBackNutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDatosPacienteNut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlBackNutLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlDiagNut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnlEstNut, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlNutriologoLayout = new javax.swing.GroupLayout(pnlNutriologo);
        pnlNutriologo.setLayout(pnlNutriologoLayout);
        pnlNutriologoLayout.setHorizontalGroup(
            pnlNutriologoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 749, Short.MAX_VALUE)
            .addGroup(pnlNutriologoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNutriologoLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBackNut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(18, Short.MAX_VALUE)))
        );
        pnlNutriologoLayout.setVerticalGroup(
            pnlNutriologoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 233, Short.MAX_VALUE)
            .addGroup(pnlNutriologoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNutriologoLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBackNut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jtabbedAtender.addTab("Nutriologo", pnlNutriologo);

        lblDatos6.setText("Datos Paciente:");

        lblNombre7.setText("Nombre:");

        lblMatricula7.setText("Matricula:");

        txtMatriculaMed.setEditable(false);
        txtMatriculaMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMatriculaMedActionPerformed(evt);
            }
        });

        txtNombreMed.setEditable(false);
        txtNombreMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreMedActionPerformed(evt);
            }
        });

        lblAlergias7.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lblAlergias7.setText("Alergias:");

        txtAlergiasMed.setEditable(false);
        txtAlergiasMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAlergiasMedActionPerformed(evt);
            }
        });

        lblPadecimientos7.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lblPadecimientos7.setText("Padecimientos:");

        txtPadecimientosMed.setEditable(false);
        txtPadecimientosMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPadecimientosMedActionPerformed(evt);
            }
        });

        txtMotivoMed.setEditable(false);
        txtMotivoMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMotivoMedActionPerformed(evt);
            }
        });

        jLabel14.setText("Motivo Consulta:");

        javax.swing.GroupLayout pnlDatosPacienteMedLayout = new javax.swing.GroupLayout(pnlDatosPacienteMed);
        pnlDatosPacienteMed.setLayout(pnlDatosPacienteMedLayout);
        pnlDatosPacienteMedLayout.setHorizontalGroup(
            pnlDatosPacienteMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosPacienteMedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosPacienteMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlDatosPacienteMedLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(txtMotivoMed))
                    .addGroup(pnlDatosPacienteMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlDatosPacienteMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlDatosPacienteMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pnlDatosPacienteMedLayout.createSequentialGroup()
                                    .addComponent(lblAlergias7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtAlergiasMed, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlDatosPacienteMedLayout.createSequentialGroup()
                                    .addComponent(lblMatricula7)
                                    .addGap(14, 14, 14)
                                    .addComponent(txtMatriculaMed))
                                .addGroup(pnlDatosPacienteMedLayout.createSequentialGroup()
                                    .addComponent(lblNombre7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(14, 14, 14)
                                    .addComponent(txtNombreMed, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlDatosPacienteMedLayout.createSequentialGroup()
                                .addComponent(lblPadecimientos7)
                                .addGap(18, 18, 18)
                                .addComponent(txtPadecimientosMed, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(lblDatos6)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDatosPacienteMedLayout.setVerticalGroup(
            pnlDatosPacienteMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosPacienteMedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDatos6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosPacienteMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosPacienteMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMatricula7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMatriculaMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosPacienteMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAlergias7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAlergiasMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosPacienteMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPadecimientos7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPadecimientosMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosPacienteMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtMotivoMed))
                .addContainerGap())
        );

        lblObservaciones6.setText("Diagnostico/Consulta:");

        jTextAreaMed.setColumns(20);
        jTextAreaMed.setRows(5);
        jTextAreaMed.setToolTipText("Diagnostica el tratamiento/consulta para este paciente...");
        jScrollPane8.setViewportView(jTextAreaMed);

        javax.swing.GroupLayout pnlDiagMedLayout = new javax.swing.GroupLayout(pnlDiagMed);
        pnlDiagMed.setLayout(pnlDiagMedLayout);
        pnlDiagMedLayout.setHorizontalGroup(
            pnlDiagMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDiagMedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDiagMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8)
                    .addGroup(pnlDiagMedLayout.createSequentialGroup()
                        .addComponent(lblObservaciones6)
                        .addGap(0, 182, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlDiagMedLayout.setVerticalGroup(
            pnlDiagMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDiagMedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblObservaciones6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlEstPsi3.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones de la cita actual:"));

        btnAtendidaMed.setBackground(new java.awt.Color(0, 255, 153));
        btnAtendidaMed.setText("Atendida");
        btnAtendidaMed.setToolTipText("\"Marca esta cita como atendida y finaliza el seguimiento\"");
        btnAtendidaMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtendidaMedActionPerformed(evt);
            }
        });

        btnEncursoMed.setBackground(new java.awt.Color(51, 102, 255));
        btnEncursoMed.setText("En curso");
        btnEncursoMed.setToolTipText("\"Guarda observaciones y mantiene la cita como en proceso\"");
        btnEncursoMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncursoMedActionPerformed(evt);
            }
        });

        btnCanceladaMed.setBackground(new java.awt.Color(255, 51, 51));
        btnCanceladaMed.setText("Cancelada");
        btnCanceladaMed.setToolTipText("\"Cancela o descarta la cita, dejando registro de que no fue atendida\"");
        btnCanceladaMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCanceladaMedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlEstPsi3Layout = new javax.swing.GroupLayout(pnlEstPsi3);
        pnlEstPsi3.setLayout(pnlEstPsi3Layout);
        pnlEstPsi3Layout.setHorizontalGroup(
            pnlEstPsi3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEstPsi3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAtendidaMed, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEncursoMed, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCanceladaMed)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlEstPsi3Layout.setVerticalGroup(
            pnlEstPsi3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEstPsi3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlEstPsi3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAtendidaMed)
                    .addComponent(btnEncursoMed)
                    .addComponent(btnCanceladaMed))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout pnlBackPsi2Layout = new javax.swing.GroupLayout(pnlBackPsi2);
        pnlBackPsi2.setLayout(pnlBackPsi2Layout);
        pnlBackPsi2Layout.setHorizontalGroup(
            pnlBackPsi2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackPsi2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDatosPacienteMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlBackPsi2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlEstPsi3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDiagMed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        pnlBackPsi2Layout.setVerticalGroup(
            pnlBackPsi2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackPsi2Layout.createSequentialGroup()
                .addGroup(pnlBackPsi2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDatosPacienteMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlBackPsi2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlDiagMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnlEstPsi3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlMedicoLayout = new javax.swing.GroupLayout(pnlMedico);
        pnlMedico.setLayout(pnlMedicoLayout);
        pnlMedicoLayout.setHorizontalGroup(
            pnlMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 749, Short.MAX_VALUE)
            .addGroup(pnlMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMedicoLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBackPsi2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(18, Short.MAX_VALUE)))
        );
        pnlMedicoLayout.setVerticalGroup(
            pnlMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 233, Short.MAX_VALUE)
            .addGroup(pnlMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMedicoLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBackPsi2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jtabbedAtender.addTab("Medico", pnlMedico);

        javax.swing.GroupLayout ConsultaMedicaLayout = new javax.swing.GroupLayout(ConsultaMedica.getContentPane());
        ConsultaMedica.getContentPane().setLayout(ConsultaMedicaLayout);
        ConsultaMedicaLayout.setHorizontalGroup(
            ConsultaMedicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConsultaMedicaLayout.createSequentialGroup()
                .addComponent(jtabbedAtender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ConsultaMedicaLayout.setVerticalGroup(
            ConsultaMedicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConsultaMedicaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtabbedAtender, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setClosable(true);
        setTitle("Ventana Atender Citas");

        pnlCitas.setBorder(javax.swing.BorderFactory.createTitledBorder("Citas Asignadas"));

        tblCitas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id Cita", "Id Perfil Paciente", "Matricula", "Fecha", "Hora", "Estado"
            }
        ));
        tblCitas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCitasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblCitasMouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(tblCitas);

        javax.swing.GroupLayout pnlCitasLayout = new javax.swing.GroupLayout(pnlCitas);
        pnlCitas.setLayout(pnlCitasLayout);
        pnlCitasLayout.setHorizontalGroup(
            pnlCitasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        pnlCitasLayout.setVerticalGroup(
            pnlCitasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCitasLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnlDetalles.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalle cita"));

        jLabel1.setText("Datos Paciente:");

        lblNombre.setText("Nombre:");

        lblMatricula.setText("Matricula:");

        txtMatricula.setEditable(false);
        txtMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMatriculaActionPerformed(evt);
            }
        });

        txtNombre.setEditable(false);
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        jLabel4.setText("Motivo Consulta:");

        txtHora.setEditable(false);
        txtHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHoraActionPerformed(evt);
            }
        });

        pnlOpciones.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones Cita"));

        btnAtendidaNC.setText("Marcar como Atendida");
        btnAtendidaNC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtendidaNCActionPerformed(evt);
            }
        });

        btnDescartada.setText("Descartar Cita");

        btnAtender.setText("Atender Cita");
        btnAtender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtenderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlOpcionesLayout = new javax.swing.GroupLayout(pnlOpciones);
        pnlOpciones.setLayout(pnlOpcionesLayout);
        pnlOpcionesLayout.setHorizontalGroup(
            pnlOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlOpcionesLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(pnlOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnDescartada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAtender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAtendidaNC))
                .addGap(14, 14, 14))
        );
        pnlOpcionesLayout.setVerticalGroup(
            pnlOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOpcionesLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(btnAtender)
                .addGap(18, 18, 18)
                .addComponent(btnAtendidaNC, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDescartada)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblAlergias.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lblAlergias.setText("Alergias:");

        txtAlergias.setEditable(false);
        txtAlergias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAlergiasActionPerformed(evt);
            }
        });

        lblPadecimientos.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lblPadecimientos.setText("Padecimientos:");

        txtPadecimientos.setEditable(false);
        txtPadecimientos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPadecimientosActionPerformed(evt);
            }
        });

        txtMotivo.setEditable(false);
        txtMotivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMotivoActionPerformed(evt);
            }
        });

        txtFecha.setEditable(false);
        txtFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaActionPerformed(evt);
            }
        });

        jLabel3.setText("Fecha:");

        jLabel5.setText("Hora:");

        jLabel6.setText("Detalles cita:");

        jLabel2.setText("Estado:");

        txtEstado.setEditable(false);
        txtEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEstadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDetallesLayout = new javax.swing.GroupLayout(pnlDetalles);
        pnlDetalles.setLayout(pnlDetallesLayout);
        pnlDetallesLayout.setHorizontalGroup(
            pnlDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetallesLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnlDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDetallesLayout.createSequentialGroup()
                        .addGroup(pnlDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pnlDetallesLayout.createSequentialGroup()
                                    .addComponent(lblAlergias)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtAlergias, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlDetallesLayout.createSequentialGroup()
                                    .addComponent(lblMatricula)
                                    .addGap(14, 14, 14)
                                    .addComponent(txtMatricula))
                                .addGroup(pnlDetallesLayout.createSequentialGroup()
                                    .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(14, 14, 14)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlDetallesLayout.createSequentialGroup()
                                .addComponent(lblPadecimientos)
                                .addGap(18, 18, 18)
                                .addComponent(txtPadecimientos, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, Short.MAX_VALUE))
                    .addGroup(pnlDetallesLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(252, 252, 252)))
                .addGroup(pnlDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDetallesLayout.createSequentialGroup()
                        .addGroup(pnlDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDetallesLayout.createSequentialGroup()
                                .addGroup(pnlDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHora)
                                    .addComponent(txtFecha)))
                            .addGroup(pnlDetallesLayout.createSequentialGroup()
                                .addGroup(pnlDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4)
                                    .addGroup(pnlDetallesLayout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(pnlDetallesLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(txtMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(pnlOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlDetallesLayout.setVerticalGroup(
            pnlDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetallesLayout.createSequentialGroup()
                .addComponent(pnlOpciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlDetallesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDetallesLayout.createSequentialGroup()
                        .addComponent(txtMotivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(75, 75, 75))
                    .addGroup(pnlDetallesLayout.createSequentialGroup()
                        .addGroup(pnlDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAlergias, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAlergias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPadecimientos, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPadecimientos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout pnlBackroundLayout = new javax.swing.GroupLayout(pnlBackround);
        pnlBackround.setLayout(pnlBackroundLayout);
        pnlBackroundLayout.setHorizontalGroup(
            pnlBackroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlBackroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlDetalles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlBackroundLayout.createSequentialGroup()
                        .addComponent(pnlCitas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        pnlBackroundLayout.setVerticalGroup(
            pnlBackroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlCitas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDetalles, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlBackround, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlBackround, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


private void llenarTableCitas(int idPersonal) throws ClassNotFoundException {
    try {
        // Verificar que tblCitas no sea null primero
        if (tblCitas == null) {
            System.out.println("ERROR: tblCitas es null - no se puede llenar la tabla");
            return;
        }
        
        // Obtener el modelo de la tabla y limpiarlo
        DefaultTableModel modelo = (DefaultTableModel) tblCitas.getModel();
        modelo.setRowCount(0); // Limpia la tabla antes de cargar datos nuevos

        // Crear conexión usando la clase ConexionBD
        ConexionBD conexion = new ConexionBD();
        Connection con = conexion.conexionDataBase();

        String sql = 
                "SELECT c.idCita, p.idPerfil, u.matricula, c.fecha, c.hora, c.estado " 
                + "FROM cita c " 
                + "JOIN perfil p ON c.idPerfil = p.idPerfil " 
                + "JOIN usuario u ON u.idUsuario = p.idUsuario " 
                +"WHERE c.idPersonal = ?";

        PreparedStatement ps = con.prepareStatement(sql);
        ps.setInt(1, idPersonal);
        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            Object[] fila = new Object[6];
            fila[0] = rs.getInt("idCita");
            fila[1] = rs.getInt("idPerfil");
            fila[2] = rs.getString("matricula");
            fila[3] = rs.getDate("fecha");
            fila[4] = rs.getTime("hora");
            fila[5] = rs.getString("estado");

            modelo.addRow(fila);
        }

        // Cerrar recursos
        rs.close();
        ps.close();
        conexion.cerrarConexion(con);

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error al llenar tabla de citas: " + e.getMessage());
    }
}
    
private void llenarDetallesPaciente(Cita citaSeleccionada) {
    if (citaSeleccionada != null && citaSeleccionada.getPerfil() != null) {
        Perfil perfilPaciente = citaSeleccionada.getPerfil();
        
        // Datos del paciente
        txtNombre.setText(perfilPaciente.getNombre() + " " + perfilPaciente.getApellidoPaterno() + " " + perfilPaciente.getApellidoMaterno());
        txtMatricula.setText(perfilPaciente.getMatricula());
        txtAlergias.setText(perfilPaciente.getAlergias());
        txtPadecimientos.setText(perfilPaciente.getPadecimientos());
        
        // Datos de la cita
        txtFecha.setText(citaSeleccionada.getFechaMSQL());
        txtHora.setText(citaSeleccionada.getHora());
        txtEstado.setText(citaSeleccionada.getEstado());
        txtMotivo.setText(citaSeleccionada.getMotivo());
        
    } else {
        // Limpiar campos si no hay cita seleccionada
        txtNombre.setText("");
        txtMatricula.setText("");
        txtAlergias.setText("");
        txtPadecimientos.setText("");
        txtFecha.setText("");
        txtHora.setText("");
        txtEstado.setText("");
        txtMotivo.setText("");
    }
}

private Cita obtenerCitaPorId(int idCita) throws ClassNotFoundException, SQLException {
    String sql = "SELECT c.idCita, c.fecha, c.hora, c.estado, " +
                 "m.descripcion as motivo, " + 
                 "p.idPerfil, p.nombre, p.apellido_paterno, p.apellido_materno, " +
                 "u.matricula, p.alergias, p.padecimientos " +
                 "FROM cita c " +
                 "JOIN perfil p ON c.idPerfil = p.idPerfil " +
                 "JOIN usuario u ON u.idUsuario = p.idUsuario " +
                 "JOIN motivo m ON c.idMotivo = m.idMotivo " +
                 "WHERE c.idCita = ?";

    try (Connection con = objetoConexionBD.conexionDataBase();
         PreparedStatement ps = con.prepareStatement(sql)) {

        ps.setInt(1, idCita);
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            Perfil perfil = new Perfil(
                rs.getInt("idPerfil"),
                rs.getString("nombre"),
                rs.getString("apellido_paterno"),
                rs.getString("apellido_materno"),
                rs.getString("matricula"),
                rs.getString("alergias"),
                rs.getString("padecimientos")
            );

            return new Cita(
                rs.getInt("idCita"),
                rs.getString("fecha"),
                rs.getString("hora"),
                rs.getString("estado"),
                rs.getString("motivo"), // ⚠️ Esto busca la columna "motivo" del ResultSet
                perfil
            );
        }
    }
    return null;
}
    
    private void txtAlergiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAlergiasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAlergiasActionPerformed

    private void txtPadecimientosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPadecimientosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPadecimientosActionPerformed

    private void txtMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMatriculaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMatriculaActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHoraActionPerformed
private void actualizarCita(int idCita, String observaciones, String estado) {
    try {
        // Conectamos a la base de datos
            conn = objetoConexionBD.conexionDataBase();
        String sql = "UPDATE cita SET observaciones = ?, estado = ? WHERE idCita = ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        
        ps.setString(1, observaciones); // actualizamos las observaciones
        ps.setString(2, estado);        // actualizamos el estado
        ps.setInt(3, idCita);           // indicamos cuál cita actualizar
        
        int filas = ps.executeUpdate();
        if(filas > 0){
            JOptionPane.showMessageDialog(this, "Cita actualizada correctamente.");
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró la cita.");
        }
        
        ps.close();
        conn.close();
        
    } catch (SQLException | ClassNotFoundException e) {
        JOptionPane.showMessageDialog(this, "Error al actualizar la cita: " + e.getMessage());
    }
}
//String profesion = obtenerProfesionPorIdUsuario(objetoMenuP.getIdUsuario());
//
//private String obtenerProfesionPorIdUsuario(int idUsuario) {
//    String profesion = "";
//    try {
//        Connection con = objetoConexionBD.conexionDataBase();
//        String sql = "SELECT profesion FROM personal_salud WHERE idUsuario = ?";
//        PreparedStatement ps = con.prepareStatement(sql);
//        ps.setInt(1, idUsuario);
//        ResultSet rs = ps.executeQuery();
//        if (rs.next()) {
//            profesion = rs.getString("profesion");
//        }
//        con.close();
//    } catch (Exception e) {
//        e.printStackTrace();
//    }
//    return profesion;
//}


private String obtenerPadecimientosPorIdPerfil(int idPerfil) {
    try {
        Connection con = objetoConexionBD.conexionDataBase();
        String sql = "SELECT padecimientos FROM perfil WHERE idPerfil = ?";
        PreparedStatement ps = con.prepareStatement(sql);
        ps.setInt(1, idPerfil);
        ResultSet rs = ps.executeQuery();
        
        if (rs.next()) {
            return rs.getString("padecimientos");
        }
        con.close();
    } catch (Exception e) {
        e.printStackTrace();
    }
    return "";
}
private String obtenerMotivoPorIdCita(int idCita) {
    String motivo = "";
    try {
        Connection conn = objetoConexionBD.conexionDataBase();
        String sql = "SELECT m.descripcion FROM cita c "
                   + "JOIN motivo m ON c.idMotivo = m.idMotivo "
                   + "WHERE c.idCita = ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setInt(1, idCita);
        ResultSet rs = ps.executeQuery();
        if (rs.next()) {
            motivo = rs.getString("descripcion");
        }
        rs.close();
        ps.close();
        conn.close();
    } catch (SQLException | ClassNotFoundException e) {
        JOptionPane.showMessageDialog(this, "Error al obtener motivo: " + e.getMessage());
    }
    return motivo;
}

private String obtenerAlergiasPorIdPerfil(int idPerfil) {
    String alergias = "";
    try {
        Connection conn = objetoConexionBD.conexionDataBase();
        String sql = "SELECT alergias FROM perfil WHERE idPerfil = ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setInt(1, idPerfil);
        ResultSet rs = ps.executeQuery();
        if (rs.next()) {
            alergias = rs.getString("alergias");
        }
        rs.close();
        ps.close();
        conn.close();
    } catch (SQLException | ClassNotFoundException e) {
        JOptionPane.showMessageDialog(this, "Error al obtener alergias: " + e.getMessage());
    }
    return alergias;
}
public String obtenerProfesion(int idUsuario) throws ClassNotFoundException {
    String profesion = null;
    Connection conn = objetoConexionBD.conexionDataBase();
    String sql = "SELECT profesion FROM personal_salud WHERE idUsuario = ?";
    
    try (PreparedStatement ps = conn.prepareStatement(sql)) {
        ps.setInt(1, idUsuario);
        try (ResultSet rs = ps.executeQuery()) {
            if (rs.next()) {
                profesion = rs.getString("profesion");
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    return profesion;
}

    private void btnAtenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtenderActionPerformed
    try {
        int fila = tblCitas.getSelectedRow();
        if (fila < 0) {
            JOptionPane.showMessageDialog(this, "Selecciona una cita primero.");
            return;
        }
        
        // Obtener valores de la tabla
        int idCita = (int) tblCitas.getValueAt(fila, 0);
        int idPerfil = (int) tblCitas.getValueAt(fila, 1);
        String nombrePaciente = tblCitas.getValueAt(fila, 2).toString();
        String matricula = tblCitas.getValueAt(fila, 3).toString();
        
        // Obtener información desde la base de datos
        String motivo = obtenerMotivoPorIdCita(idCita);
        String alergias = obtenerAlergiasPorIdPerfil(idPerfil);
        String padecimientos = obtenerPadecimientosPorIdPerfil(idPerfil);
        
        // Obtener profesión del personal logueado
        String profesion = obtenerProfesion(objetoMenuP.getIdUsuario());
        
        if (profesion == null || profesion.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No se ha definido la profesión del usuario.");
            return;
        }
        
        // Configurar diálogo
        ConsultaMedica.setTitle("Consulta Médica");
        ConsultaMedica.setSize(500, 400);
        ConsultaMedica.setLocationRelativeTo(this);
        
        // Limpiar listeners anteriores  //lo usamos para evitar que se ejecuten múltiples
        //listeners de forma inesperada cuando vuelves a abrir la ventana o cambiar de cita.
        btnAtendidaMed.removeActionListener(btnAtendidaMed.getActionListeners()[0]);
        btnEncursoMed.removeActionListener(btnEncursoMed.getActionListeners()[0]);
        btnCanceladaMed.removeActionListener(btnCanceladaMed.getActionListeners()[0]);
        btnAtendidaPsi.removeActionListener(btnAtendidaPsi.getActionListeners()[0]);
        btnEncursoPsi.removeActionListener(btnEncursoPsi.getActionListeners()[0]);
        btnCanceladaPsi.removeActionListener(btnCanceladaPsi.getActionListeners()[0]);
        btnAtendidaNut.removeActionListener(btnAtendidaNut.getActionListeners()[0]);
        btnEncursoNut.removeActionListener(btnEncursoNut.getActionListeners()[0]);
        btnCanceladaNut.removeActionListener(btnCanceladaNut.getActionListeners()[0]);
        
        // Seleccionar pestaña y cargar datos según profesión
        switch (profesion) {
            case "Medico":
                jtabbedAtender.setSelectedIndex(0);
                txtNombreMed.setText(nombrePaciente);
                txtMatriculaMed.setText(matricula);
                txtMotivoMed.setText(motivo);
                txtAlergiasMed.setText(alergias);
                txtPadecimientosMed.setText(padecimientos);
                jTextAreaMed.setText("");
                
                btnAtendidaMed.addActionListener(ae -> {
                    actualizarCita(idCita, jTextAreaMed.getText(), "Atendida");
                    ConsultaMedica.setVisible(false);
                    recargarCitas();
                });
                btnEncursoMed.addActionListener(ae -> {
                    actualizarCita(idCita, jTextAreaMed.getText(), "En Proceso");
                    ConsultaMedica.setVisible(false);
                    recargarCitas();
                });
                btnCanceladaMed.addActionListener(ae -> {
                    actualizarCita(idCita, jTextAreaMed.getText(), "Cancelada");
                    ConsultaMedica.setVisible(false);
                    recargarCitas();
                });
                break;
                
            case "Psicologo":
                jtabbedAtender.setSelectedIndex(1);
                txtNombrePsi.setText(nombrePaciente);
                txtMatriculaPsi.setText(matricula);
                txtMotivoPsi.setText(motivo);
                txtAlergiasPsi.setText(alergias);
                txtPadecimientosPsi.setText(padecimientos);
                jTextAreaPsi.setText("");
                
                btnAtendidaPsi.addActionListener(ae -> {
                    actualizarCita(idCita, jTextAreaPsi.getText(), "Atendida");
                    ConsultaMedica.setVisible(false);
                    recargarCitas();
                });
                btnEncursoPsi.addActionListener(ae -> {
                    actualizarCita(idCita, jTextAreaPsi.getText(), "En Proceso");
                    ConsultaMedica.setVisible(false);
                    recargarCitas();
                });
                btnCanceladaPsi.addActionListener(ae -> {
                    actualizarCita(idCita, jTextAreaPsi.getText(), "Cancelada");
                    ConsultaMedica.setVisible(false);
                    recargarCitas();
                });
                break;
                
            case "Nutricionista":
                jtabbedAtender.setSelectedIndex(2);
                txtNombreNut.setText(nombrePaciente);
                txtMatriculaNut.setText(matricula);
                txtMotivoNut.setText(motivo);
                txtAlergiasNut.setText(alergias);
                txtPadecimientosNut.setText(padecimientos);
                jTextAreaNut.setText("");
                
                btnAtendidaNut.addActionListener(ae -> {
                    actualizarCita(idCita, jTextAreaNut.getText(), "Atendida");
                    ConsultaMedica.setVisible(false);
                    recargarCitas();
                });
                btnEncursoNut.addActionListener(ae -> {
                    actualizarCita(idCita, jTextAreaNut.getText(), "En Proceso");
                    ConsultaMedica.setVisible(false);
                    recargarCitas();
                });
                btnCanceladaNut.addActionListener(ae -> {
                    actualizarCita(idCita, jTextAreaNut.getText(), "Cancelada");
                    ConsultaMedica.setVisible(false);
                    recargarCitas();
                });
                break;
        }
        
        ConsultaMedica.setVisible(true);
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(frmAtender.class.getName()).log(Level.SEVERE, null, ex);
    }
}

// Método auxiliar para recargar la tabla
private void recargarCitas() {
    try {
        llenarTableCitas(objetoMenuP.getIdUsuario());
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(frmAtender.class.getName()).log(Level.SEVERE, null, ex);
    }
}

// Limpia listeners anteriores para evitar duplicados
private void limpiarListeners(JButton... botones) {
    for (JButton btn : botones) {
        for (ActionListener al : btn.getActionListeners()) {
            btn.removeActionListener(al);
        }
    }
}

// Método centralizado para actualizar cita


// Limpia listeners anteriores para evitar duplicados


// Método centralizado para actualizar cita
private void actualizarEstadoCita(int idCita, String observaciones, String estado) {
    actualizarCita(idCita, observaciones, estado);  // tu método existente
    ConsultaMedica.setVisible(false);
    try {
        llenarTableCitas(objetoMenuP.getIdUsuario());
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(frmAtender.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_btnAtenderActionPerformed

    private void tblCitasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCitasMouseClicked
    int fila = tblCitas.getSelectedRow();
    if (fila >= 0) {
        // Recuperamos el ID de la cita de la tabla
        int idCita = (int) tblCitas.getValueAt(fila, 0);

        // Buscamos la cita completa con perfil para mostrar detalles
        try {
            Cita citaSeleccionada = obtenerCitaPorId(idCita);
            llenarDetallesPaciente(citaSeleccionada);
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar detalles: " + ex.getMessage());
        }
    }
    }//GEN-LAST:event_tblCitasMouseClicked

    private void tblCitasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCitasMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCitasMouseEntered

    private void txtEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEstadoActionPerformed

    private void txtMotivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMotivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMotivoActionPerformed

    private void txtFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaActionPerformed

    private void btnAtendidaNCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtendidaNCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAtendidaNCActionPerformed

    private void txtMatriculaPsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMatriculaPsiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMatriculaPsiActionPerformed

    private void txtNombrePsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombrePsiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombrePsiActionPerformed

    private void txtAlergiasPsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAlergiasPsiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAlergiasPsiActionPerformed

    private void txtPadecimientosPsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPadecimientosPsiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPadecimientosPsiActionPerformed

    private void txtMotivoPsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMotivoPsiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMotivoPsiActionPerformed

    private void btnEncursoPsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncursoPsiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEncursoPsiActionPerformed

    private void btnAtendidaPsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtendidaPsiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAtendidaPsiActionPerformed

    private void btnCanceladaPsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCanceladaPsiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCanceladaPsiActionPerformed

    private void txtMatriculaNutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMatriculaNutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMatriculaNutActionPerformed

    private void txtNombreNutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreNutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreNutActionPerformed

    private void txtAlergiasNutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAlergiasNutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAlergiasNutActionPerformed

    private void txtPadecimientosNutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPadecimientosNutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPadecimientosNutActionPerformed

    private void txtMotivoNutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMotivoNutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMotivoNutActionPerformed

    private void btnAtendidaNutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtendidaNutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAtendidaNutActionPerformed

    private void btnEncursoNutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncursoNutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEncursoNutActionPerformed

    private void btnCanceladaNutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCanceladaNutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCanceladaNutActionPerformed

    private void txtMatriculaMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMatriculaMedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMatriculaMedActionPerformed

    private void txtNombreMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreMedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreMedActionPerformed

    private void txtAlergiasMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAlergiasMedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAlergiasMedActionPerformed

    private void txtPadecimientosMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPadecimientosMedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPadecimientosMedActionPerformed

    private void txtMotivoMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMotivoMedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMotivoMedActionPerformed

    private void btnAtendidaMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtendidaMedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAtendidaMedActionPerformed

    private void btnEncursoMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncursoMedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEncursoMedActionPerformed

    private void btnCanceladaMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCanceladaMedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCanceladaMedActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog ConsultaMedica;
    private javax.swing.JButton btnAtender;
    private javax.swing.JButton btnAtendidaMed;
    private javax.swing.JButton btnAtendidaNC;
    private javax.swing.JButton btnAtendidaNut;
    private javax.swing.JButton btnAtendidaPsi;
    private javax.swing.JButton btnCanceladaMed;
    private javax.swing.JButton btnCanceladaNut;
    private javax.swing.JButton btnCanceladaPsi;
    private javax.swing.JButton btnDescartada;
    private javax.swing.JButton btnEncursoMed;
    private javax.swing.JButton btnEncursoNut;
    private javax.swing.JButton btnEncursoPsi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextArea jTextAreaMed;
    private javax.swing.JTextArea jTextAreaNut;
    private javax.swing.JTextArea jTextAreaPsi;
    private javax.swing.JTabbedPane jtabbedAtender;
    private javax.swing.JLabel lblAlergias;
    private javax.swing.JLabel lblAlergias3;
    private javax.swing.JLabel lblAlergias5;
    private javax.swing.JLabel lblAlergias7;
    private javax.swing.JLabel lblDatos2;
    private javax.swing.JLabel lblDatos4;
    private javax.swing.JLabel lblDatos6;
    private javax.swing.JLabel lblMatricula;
    private javax.swing.JLabel lblMatricula3;
    private javax.swing.JLabel lblMatricula5;
    private javax.swing.JLabel lblMatricula7;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNombre3;
    private javax.swing.JLabel lblNombre5;
    private javax.swing.JLabel lblNombre7;
    private javax.swing.JLabel lblObservaciones2;
    private javax.swing.JLabel lblObservaciones4;
    private javax.swing.JLabel lblObservaciones6;
    private javax.swing.JLabel lblPadecimientos;
    private javax.swing.JLabel lblPadecimientos3;
    private javax.swing.JLabel lblPadecimientos5;
    private javax.swing.JLabel lblPadecimientos7;
    private javax.swing.JPanel pnlBackNut;
    private javax.swing.JPanel pnlBackPsi;
    private javax.swing.JPanel pnlBackPsi2;
    private javax.swing.JPanel pnlBackround;
    private javax.swing.JPanel pnlCitas;
    private javax.swing.JPanel pnlDatosPacienteMed;
    private javax.swing.JPanel pnlDatosPacienteNut;
    private javax.swing.JPanel pnlDatosPacientePsi;
    private javax.swing.JPanel pnlDetalles;
    private javax.swing.JPanel pnlDiagMed;
    private javax.swing.JPanel pnlDiagNut;
    private javax.swing.JPanel pnlDiagPsi;
    private javax.swing.JPanel pnlEstNut;
    private javax.swing.JPanel pnlEstPsi;
    private javax.swing.JPanel pnlEstPsi3;
    private javax.swing.JPanel pnlMedico;
    private javax.swing.JPanel pnlNutriologo;
    private javax.swing.JPanel pnlOpciones;
    private javax.swing.JPanel pnlPsicologo;
    private javax.swing.JTable tblCitas;
    private javax.swing.JTextField txtAlergias;
    private javax.swing.JTextField txtAlergiasMed;
    private javax.swing.JTextField txtAlergiasNut;
    private javax.swing.JTextField txtAlergiasPsi;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtMatricula;
    private javax.swing.JTextField txtMatriculaMed;
    private javax.swing.JTextField txtMatriculaNut;
    private javax.swing.JTextField txtMatriculaPsi;
    private javax.swing.JTextField txtMotivo;
    private javax.swing.JTextField txtMotivoMed;
    private javax.swing.JTextField txtMotivoNut;
    private javax.swing.JTextField txtMotivoPsi;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreMed;
    private javax.swing.JTextField txtNombreNut;
    private javax.swing.JTextField txtNombrePsi;
    private javax.swing.JTextField txtPadecimientos;
    private javax.swing.JTextField txtPadecimientosMed;
    private javax.swing.JTextField txtPadecimientosNut;
    private javax.swing.JTextField txtPadecimientosPsi;
    // End of variables declaration//GEN-END:variables



}
