
package guiutmedic.formularios;

import guiutmedic.clases.ConexionBD;
import guiutmedic.clases.Perfil;
import guiutmedic.clases.PerfilBD;
import guiutmedic.clases.Usuario;
import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.File;
import javax.swing.ImageIcon;

/**
 *
 * @author santi
 */
public class frmPerfil extends javax.swing.JInternalFrame {
    String ruta="";
    /**
     * Creates new form frmPerfil
     */
     private JFileChooser fileChooser;
    boolean isMod = false;
    
    ConexionBD objetoConexionBD = new ConexionBD();
    Connection conn;
    PreparedStatement stmt = null;
    ResultSet rs = null;
    String datoBuscar = "";
    String dato = "";
    private frmMenuPrincipal menuPadre;
    String idUsuarioDeseado;

    public String getIdUsuarioDeseado() {
        return idUsuarioDeseado;
    }

    public void setIdUsuarioDeseado(String idUsuarioDeseado) {
        this.idUsuarioDeseado = idUsuarioDeseado;
    }
    
    /**
     *
     * @param menuPadre
     * @param idusuario
     * @throws ClassNotFoundException
     */
    private Usuario objetoMenuP; //variable del objeto local
    public frmPerfil(Usuario objUsuario) throws ClassNotFoundException {
        initComponents();
        this.objetoMenuP = objUsuario;
        this.menuPadre = menuPadre;
        this.idUsuarioDeseado = String.valueOf(objUsuario.getIdUsuario());
        this.txtIdUsuario.setText(idUsuarioDeseado);
        System.out.println("frmPerfil recibe idUsuario: " + objUsuario.getIdUsuario());
        
        
        fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Seleccionar Imagen");
        fileChooser.setFileFilter(new javax.swing.filechooser.FileFilter() {
            public boolean accept(File f) {
                return f.isDirectory() || f.getName().toLowerCase().endsWith(".jpg")
                        || f.getName().toLowerCase().endsWith(".jpeg")
                        || f.getName().toLowerCase().endsWith(".png");
            }

            public String getDescription() {
                return "Archivos de Imagen (JPG, JPEG, PNG)";
            }
        });

        
        

        llenarDatos();
        
        actualizarMod();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        lblTelefono = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        lblContacto = new javax.swing.JLabel();
        txtContacto = new javax.swing.JTextField();
        lblAlergias = new javax.swing.JLabel();
        jLabelIDUsuario = new javax.swing.JLabel();
        txtAlergias = new javax.swing.JTextField();
        txtIdUsuario = new javax.swing.JTextField();
        lblPadecimientos = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        txtPadecimientos = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        lblMatricula = new javax.swing.JLabel();
        txtMatricula = new javax.swing.JTextField();
        lblFoto = new javax.swing.JLabel();
        btnFoto = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnModificar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnRegistrarse = new javax.swing.JButton();
        lblPaterno = new javax.swing.JLabel();
        txtAPaterno = new javax.swing.JTextField();
        lblMaterno = new javax.swing.JLabel();
        txtAMaterno = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Ventana de Perfil");

        lblTelefono.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lblTelefono.setText("Telefono:");

        txtTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoActionPerformed(evt);
            }
        });

        lblContacto.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lblContacto.setText("Cont.Emergencia:");

        txtContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContactoActionPerformed(evt);
            }
        });

        lblAlergias.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lblAlergias.setText("Alergias:");

        jLabelIDUsuario.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        jLabelIDUsuario.setText("IdUsuario:");

        txtAlergias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAlergiasActionPerformed(evt);
            }
        });

        txtIdUsuario.setEditable(false);
        txtIdUsuario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtIdUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdUsuarioActionPerformed(evt);
            }
        });

        lblPadecimientos.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lblPadecimientos.setText("Padecimientos:");

        lblNombre.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lblNombre.setText("Nombre:");

        txtPadecimientos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPadecimientosActionPerformed(evt);
            }
        });

        txtNombre.setToolTipText("hola");
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        lblMatricula.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lblMatricula.setText("Matricula:");

        txtMatricula.setEditable(false);
        txtMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMatriculaActionPerformed(evt);
            }
        });

        lblFoto.setBackground(new java.awt.Color(204, 204, 204));
        lblFoto.setPreferredSize(new java.awt.Dimension(150, 150));

        btnFoto.setText("subir foto");
        btnFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFotoActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(255, 102, 102));
        btnModificar.setText("Modificar");
        btnModificar.setToolTipText("Permite activar la modificacion de los campos  requeirdos");
        btnModificar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnModificar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnModificarFocusGained(evt);
            }
        });
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnGuardar.setBackground(new java.awt.Color(0, 204, 102));
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnRegistrarse.setBackground(new java.awt.Color(0, 153, 255));
        btnRegistrarse.setText("Registrarse");
        btnRegistrarse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegistrarse)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificar)
                    .addComponent(btnGuardar)
                    .addComponent(btnRegistrarse))
                .addContainerGap())
        );

        lblPaterno.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lblPaterno.setText("A.Paterno:");

        txtAPaterno.setToolTipText("hola");
        txtAPaterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAPaternoActionPerformed(evt);
            }
        });

        lblMaterno.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        lblMaterno.setText("A.Materno:");

        txtAMaterno.setToolTipText("hola");
        txtAMaterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAMaternoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(btnFoto)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblAlergias)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtAlergias, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblContacto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblPadecimientos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPadecimientos, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblTelefono)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblMatricula)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblNombre)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabelIDUsuario)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtIdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblPaterno)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtAPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblMaterno)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtAMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(47, 47, 47)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelIDUsuario)
                            .addComponent(txtIdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNombre)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPaterno)
                            .addComponent(txtAPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaterno)
                            .addComponent(txtAMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMatricula)
                            .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTelefono)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblContacto)
                            .addComponent(txtContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAlergias)
                            .addComponent(txtAlergias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPadecimientos)
                            .addComponent(txtPadecimientos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnFoto)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void actualizarMod() {
        if (isMod) {
            this.setTitle("Ventana de Perfil (MODIFICANDO)");
            txtNombre.setEditable(true);
            txtAPaterno.setEditable(true);
            txtAMaterno.setEditable(true);
            txtTelefono.setEditable(true);
            txtContacto.setEditable(true);
            txtAlergias.setEditable(true);
            txtPadecimientos.setEditable(true);
            System.out.println("MODIFICANDO");
            System.out.println("ID Usuario: "+idUsuarioDeseado);
        } else {
            this.setTitle("Ventana de Perfil");
            txtNombre.setEditable(false);
            txtAPaterno.setEditable(false);
            txtAMaterno.setEditable(false);
            txtTelefono.setEditable(false);
            txtContacto.setEditable(false);
            txtAlergias.setEditable(false);
            txtPadecimientos.setEditable(false);
            System.out.println("NO MODIFICANDO");
        }
    }
 
    
    //lanzar consulta para saber si el idusuario tiene idperfil lanzo consulta si perfil sino consulta no perfil consultando perfil 

private void llenarDatos() throws ClassNotFoundException {
    String sql = "SELECT u.idUsuario, u.usuario, u.matricula, p.idPerfil, " +
                 "p.nombre, p.apellido_paterno, p.apellido_materno, p.telefono, " +
                 "p.contactoEmergencia, p.alergias, p.padecimientos, p.foto " +
                 "FROM usuario u " +
                 "LEFT JOIN perfil p ON u.idUsuario = p.idUsuario " +
                 "WHERE u.idUsuario = ?";

    try {
        conn = objetoConexionBD.conexionDataBase();
        int idDeseado = Integer.parseInt(idUsuarioDeseado);

        stmt = conn.prepareStatement(sql);
        stmt.setInt(1, idDeseado);
        rs = stmt.executeQuery();

        if (rs.next()) {
            // Siempre llenamos los campos básicos
            txtIdUsuario.setText(rs.getString("idUsuario"));
            txtMatricula.setText(rs.getString("matricula") != null ? rs.getString("matricula") : "");

            // Nombre de usuario (tabla usuario)
            String nombreUsuario = rs.getString("usuario") != null ? rs.getString("usuario") : "";

            if (rs.getString("idPerfil") != null) {
                // --- USUARIO CON PERFIL ---
                txtNombre.setText(rs.getString("nombre") != null ? rs.getString("nombre") : "");
                txtAPaterno.setText(rs.getString("apellido_paterno") != null ? rs.getString("apellido_paterno") : "");
                txtAMaterno.setText(rs.getString("apellido_materno") != null ? rs.getString("apellido_materno") : "");
                txtTelefono.setText(rs.getString("telefono") != null ? rs.getString("telefono") : "");
                txtContacto.setText(rs.getString("contactoEmergencia") != null ? rs.getString("contactoEmergencia") : "");
                txtAlergias.setText(rs.getString("alergias") != null ? rs.getString("alergias") : "");
                txtPadecimientos.setText(rs.getString("padecimientos") != null ? rs.getString("padecimientos") : "");

                if (rs.getString("foto") != null) {
                    ImageIcon imageIcon = new ImageIcon(rs.getString("foto"));
                    Image image = imageIcon.getImage();
                    Image scaledImage = image.getScaledInstance(200, 150, Image.SCALE_SMOOTH);
                    lblFoto.setIcon(new ImageIcon(scaledImage));
                } else {
                    lblFoto.setIcon(null);
                }

                btnModificar.setVisible(true);
                btnGuardar.setVisible(true);
                btnRegistrarse.setVisible(false);

            } else {
                // --- USUARIO SIN PERFIL ---
                txtNombre.setText(nombreUsuario); // usamos el nombre de usuario
                txtAPaterno.setText("");
                txtAMaterno.setText("");
                txtTelefono.setText("");
                txtContacto.setText("");
                txtAlergias.setText("");
                txtPadecimientos.setText("");
                lblFoto.setIcon(null);

                btnModificar.setVisible(true);
                btnGuardar.setVisible(false);
                btnRegistrarse.setVisible(true);
            }

        } else {
            JOptionPane.showMessageDialog(null, "¡Usuario no encontrado!");
        }

    } catch (SQLException ex) {
        Logger.getLogger(frmPerfil.class.getName()).log(Level.SEVERE, null, ex);
    }

    System.out.println("llenarDatos() busca idUsuario: " + idUsuarioDeseado);
}
   
private void guardarDatos() throws ClassNotFoundException, SQLException {
    conn = objetoConexionBD.conexionDataBase();
    int idUsuarioInt = Integer.parseInt(idUsuarioDeseado);

    // Verificamos si ya existe perfil
    String checkSql = "SELECT idPerfil FROM perfil WHERE idUsuario=?";
    try (PreparedStatement checkStmt = conn.prepareStatement(checkSql)) {
        checkStmt.setInt(1, idUsuarioInt);
        rs = checkStmt.executeQuery();

        if (rs.next()) {
            // --- Perfil existe: hacemos UPDATE ---
            String sqlUpdate = "UPDATE perfil SET nombre=?, apellido_paterno=?, apellido_materno=?, telefono=?, contactoEmergencia=?, alergias=?, padecimientos=?, foto=? WHERE idUsuario=?";
            try (PreparedStatement stmt = conn.prepareStatement(sqlUpdate)) {
                stmt.setString(1, txtNombre.getText().trim());
                stmt.setString(2, txtAPaterno.getText().trim());
                stmt.setString(3, txtAMaterno.getText().trim());
                stmt.setString(4, txtTelefono.getText().trim());
                stmt.setString(5, txtContacto.getText().trim());
                stmt.setString(6, txtAlergias.getText().trim());
                stmt.setString(7, txtPadecimientos.getText().trim());
                stmt.setString(8, ruta);
                stmt.setInt(9, idUsuarioInt);

                int filas = stmt.executeUpdate();
                if (filas > 0) {
                    JOptionPane.showMessageDialog(this, "Perfil actualizado correctamente.");
                }
            }

        } else {
            // --- Perfil no existe: hacemos INSERT ---
            String sqlInsert = "INSERT INTO perfil (idUsuario, nombre, apellido_paterno, apellido_materno, telefono, contactoEmergencia, alergias, padecimientos, foto) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
            try (PreparedStatement stmt = conn.prepareStatement(sqlInsert)) {
                stmt.setInt(1, idUsuarioInt);
                stmt.setString(2, txtNombre.getText().trim());
                stmt.setString(3, txtAPaterno.getText().trim());
                stmt.setString(4, txtAMaterno.getText().trim());
                stmt.setString(5, txtTelefono.getText().trim());
                stmt.setString(6, txtContacto.getText().trim());
                stmt.setString(7, txtAlergias.getText().trim());
                stmt.setString(8, txtPadecimientos.getText().trim());
                stmt.setString(9, ruta);

                int filas = stmt.executeUpdate();
                if (filas > 0) {
                    JOptionPane.showMessageDialog(this, "Perfil registrado correctamente.");
                    // Ahora que existe, habilitamos el botón Guardar
                    btnGuardar.setVisible(true);
                    btnRegistrarse.setVisible(false);
                }
            }
        }
    }
}


    private void txtIdUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdUsuarioActionPerformed
    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed
    private void txtMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMatriculaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMatriculaActionPerformed
    private void txtTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoActionPerformed
    }//GEN-LAST:event_txtTelefonoActionPerformed
    private void txtContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContactoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContactoActionPerformed
    private void txtAlergiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAlergiasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAlergiasActionPerformed
    private void txtPadecimientosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPadecimientosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPadecimientosActionPerformed
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
    try {
        // Primero guardar datos mientras los campos están editables
        guardarDatos();

        // Luego deshabilitamos edición
        isMod = false;
        actualizarMod();
    } catch (ClassNotFoundException | SQLException ex) {
        Logger.getLogger(frmPerfil.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        isMod = true;
        actualizarMod();
                    
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFotoActionPerformed
        // TODO add your handling code here:
        
         if (evt.getSource() == btnFoto) {
            int returnValue = fileChooser.showOpenDialog(this);
            if (returnValue == JFileChooser.APPROVE_OPTION) {
                File selectedFile = fileChooser.getSelectedFile();
                try {
                    System.out.println("ruta "+ selectedFile.getAbsolutePath());
                    this.ruta=selectedFile.getAbsolutePath();
                    ImageIcon imageIcon = new ImageIcon(selectedFile.getAbsolutePath());
                    Image image = imageIcon.getImage();
                    Image scaledImage = image.getScaledInstance(200, 150, Image.SCALE_SMOOTH); // Ajustar tamaño
                    ImageIcon scaledImageIcon = new ImageIcon(scaledImage);
                    lblFoto.setIcon(scaledImageIcon);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Error al cargar la imagen.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnFotoActionPerformed

    private void btnRegistrarseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarseActionPerformed


     try (Connection conn = new ConexionBD().conexionDataBase()) {
        Perfil perfil = new Perfil(rs.getInt("idUsuario"), rs.getString("nombre"), rs.getString("apellido_paterno"), rs.getString("apellido_materno"), rs.getString("matricula"), rs.getString("alergias"), rs.getString("padecimientos"));
        perfil.setIdUsuario(Integer.parseInt(txtIdUsuario.getText()));
        perfil.setNombre(txtNombre.getText());
        perfil.setApellidoPaterno(txtAPaterno.getText());
        perfil.setApellidoMaterno(txtAMaterno.getText());
        perfil.setTelefono(txtTelefono.getText());
        perfil.setContactoEmergencia(txtContacto.getText());
        perfil.setAlergias(txtAlergias.getText());
        perfil.setPadecimientos(txtPadecimientos.getText());

        PerfilBD perfilBD = new PerfilBD();
        int filas = perfilBD.registrarPerfil(conn, perfil);

        if (filas > 0) {
            JOptionPane.showMessageDialog(this, "Perfil registrado con éxito.");
            btnRegistrarse.setVisible(false);
            btnModificar.setVisible(true);
            btnGuardar.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Error al registrar el perfil.");
        }

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    }   catch (ClassNotFoundException ex) {
            Logger.getLogger(frmPerfil.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRegistrarseActionPerformed

    private void btnModificarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnModificarFocusGained
        // TODO add your handling code here:
        btnModificar.getToolTipText(); 
    }//GEN-LAST:event_btnModificarFocusGained

    private void txtAPaternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAPaternoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAPaternoActionPerformed

    private void txtAMaternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAMaternoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAMaternoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFoto;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnRegistrarse;
    private javax.swing.JLabel jLabelIDUsuario;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblAlergias;
    private javax.swing.JLabel lblContacto;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JLabel lblMaterno;
    private javax.swing.JLabel lblMatricula;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPadecimientos;
    private javax.swing.JLabel lblPaterno;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JTextField txtAMaterno;
    private javax.swing.JTextField txtAPaterno;
    private javax.swing.JTextField txtAlergias;
    private javax.swing.JTextField txtContacto;
    private javax.swing.JTextField txtIdUsuario;
    private javax.swing.JTextField txtMatricula;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPadecimientos;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
